#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.4.0
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#    networks:
#      - kafka-network
#
#  kafka:
#    image: confluentinc/cp-kafka:7.4.0
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#    restart: unless-stopped
#    networks:
#      - kafka-network
#
#networks:
#  kafka-network:
#    driver: bridge


#version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks: [kafka-network]

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    restart: unless-stopped
    networks: [kafka-network]

  userservice-db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: userservice
      MYSQL_USER: userservice
      MYSQL_PASSWORD: userservicepass
      MYSQL_ROOT_PASSWORD: rootpass
#    ports: ["33060:3306"]
    command: ["mysqld","--default-authentication-plugin=mysql_native_password"]
    volumes:
      - users-db:/var/lib/mysql
    networks: [kafka-network]

  productservice-db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: productservice
      MYSQL_USER: productservice
      MYSQL_PASSWORD: productservicepass
      MYSQL_ROOT_PASSWORD: rootpass
#    ports: ["33061:3306"]
    command: ["mysqld","--default-authentication-plugin=mysql_native_password"]
    volumes:
      - products-db:/var/lib/mysql
    networks: [kafka-network]

  redis:
    image: redis:7
    ports: ["6379:6379"]
    networks: [kafka-network]

  gateway:
    build:
      context: ./gatewayService
    image: gateway:latest
    depends_on: []
    ports: ["8085:8085"]
    environment:
      SERVER_PORT: 8085
      SPRING_APPLICATION_NAME: gateway
      PRODUCT_SERVICE_URI: http://productservice:8081
      USER_SERVICE_URI: http://userservice:8080
      SECURITY_JWT_HMAC_SECRET: "your-very-long-secret-key-which-has-32-bytes!"
      EUREKA_CLIENT_ENABLED: "false"
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    networks: [kafka-network]

  userservice:
    build:
      context: ./userservice
    image: userservice:latest
    depends_on:
      - userservice-db
      - kafka
      - redis
    ports: ["8080:8080"]
    environment:
      SERVER_PORT: 8080
      SPRING_APPLICATION_NAME: userservice
      SPRING_DATASOURCE_URL: jdbc:mysql://userservice-db:3306/userservice
      SPRING_DATASOURCE_USERNAME: userservice
      SPRING_DATASOURCE_PASSWORD: userservicepass
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      EUREKA_CLIENT_ENABLED: "false"
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    networks: [kafka-network]

  productservice:
    build:
      context: ./productservice
    image: productservice:latest
    depends_on:
      - productservice-db
      - kafka
      - redis
    ports: ["8081:8081"]
    environment:
      SERVER_PORT: 8081
      SPRING_APPLICATION_NAME: productservice
      SPRING_DATASOURCE_URL: jdbc:mysql://productservice-db:3306/productservice
      SPRING_DATASOURCE_USERNAME: productservice
      SPRING_DATASOURCE_PASSWORD: productservicepass
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      USERSERVICE_BASE_URL: http://userservice:8080
      EUREKA_CLIENT_ENABLED: "false"
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    networks: [kafka-network]

volumes:
  users-db:
  products-db:

networks:
  kafka-network:
    driver: bridge
