#spring.application.name=userservice
#
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/users
#spring.datasource.username=mounish
#spring.datasource.password=Mounish@30
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql= true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#
## Logging configuration
#logging.level.org.springframework.security=TRACE
#
## Spring Security default user credentials
#spring.security.user.name=user
#spring.security.user.password=password
#
## OAuth2 Authorization Server client configuration
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true
#
#server.port=8080
#
#
#management.endpoints.web.exposure.include= *
#management.endpoint.health.show-details=always



# ===== Service identity =====
spring.application.name=${SPRING_APPLICATION_NAME:userservice}

# ===== JPA / Hibernate =====
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# ===== Database connection =====
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/users}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:mounish}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:Mounish@30}

# ===== Logging =====
logging.level.org.springframework.security=TRACE

# ===== Default Spring Security user (only for testing/dev) =====
spring.security.user.name=${SPRING_SECURITY_USER_NAME:user}
spring.security.user.password=${SPRING_SECURITY_USER_PASSWORD:password}

# ===== OAuth2 Authorization Server client configuration =====
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=${OIDC_CLIENT_ID:oidc-client}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret=${OIDC_CLIENT_SECRET:{noop}secret}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=${OIDC_REDIRECT_URI:http://127.0.0.1:8080/login/oauth2/code/oidc-client}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=${OIDC_LOGOUT_URI:http://127.0.0.1:8080/}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true

# ===== Server config =====
server.port=${SERVER_PORT:8080}

# ===== Eureka client =====
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}

# ===== Management endpoints =====
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
